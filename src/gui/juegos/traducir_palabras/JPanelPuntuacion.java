/*
 * Copyright 2015 Vikour.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package gui.juegos.traducir_palabras;

import gui.componentes.JRoutedPanel;
import gui.util.GestionPaneles;
import java.awt.Window;
import javax.swing.SwingUtilities;
import lanword.controladores.juegos.JuegosCtrl;
import lanword.controladores.juegos.PartidaJuegoTraducir;
import lanword.modelo.Palabra;


public class JPanelPuntuacion extends JRoutedPanel {
    private Palabra palabra;
    private PartidaJuegoTraducir partida;
    


    public JPanelPuntuacion(GestionPaneles gesPanel) {
        super(gesPanel);
        initComponents();
        customInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButtonContinuar = new javax.swing.JButton();
        JLabelError = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPanePuntuacion = new javax.swing.JEditorPane();

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonContinuar.setText("Reiniciar");
        jButtonContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContinuarActionPerformed(evt);
            }
        });

        JLabelError.setForeground(new java.awt.Color(220, 31, 31));

        jEditorPanePuntuacion.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setViewportView(jEditorPanePuntuacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonContinuar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(331, 331, 331)
                        .addComponent(JLabelError, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JLabelError)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonContinuar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Window dialog = SwingUtilities.getWindowAncestor(this);
        gui.WindowsController.getInstance().showAdministracion();
        GestionPaneles gesPanel = getGestorPaneles();
        gesPanel.atras();
        gesPanel.atras();
        dialog.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContinuarActionPerformed
        GestionPaneles gesPanel = getGestorPaneles();
        gesPanel.atras();
        gesPanel.atras();
    }//GEN-LAST:event_jButtonContinuarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabelError;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonContinuar;
    private javax.swing.JEditorPane jEditorPanePuntuacion;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void customInitComponents() {
        PartidaJuegoTraducir partida = JuegosCtrl.getInstance().getPartida();
        jEditorPanePuntuacion.setContentType("text/html");
        jEditorPanePuntuacion.setText(ScoreHTMLGenerator.generate(partida));
        
    }
    
    public static class ScoreHTMLGenerator {
        private static final String STYLE= 
                  "h3 { text-align: center; width: 100%; } body { background-color: "
                + "#f2f1f0; font-size: 11pt; } table {"
                + " width: 100%; border-collapse: collapse; } th, td { padding: 3px 5px 3px 5px; "
                + "text-align: center; } th { background-color: rgb(67,67,67); color: white; } "
                + "tr { border-bottom: rgb(67, 67, 67) solid 1px; }";
        private static final String HTML_TOP = 
                "<html><head><style type=\"text/css\">" + STYLE + "</style></head><body>";
        private static final String HTML_TABLE_TOP = 
                "<table><tr><th>Palabra</th><th>Fallo</th><th>Posibilidades</th></tr>";
        
        public static String generate(PartidaJuegoTraducir partida) {
            String HTMLPage = HTML_TOP;
            String tmp ;
            
            // Se añade el título.
            
            if (partida.getPuntuacion()< 5)
                HTMLPage += "<h3 style=\"color: red\">Puntuación : " + partida.getPuntuacion() + "</h3>";
            else
            HTMLPage += "<h3 style=\"color: green\">Puntuación : " + partida.getPuntuacion() + "</h3>";
            
            if (!partida.getFallos().isEmpty()) {
                // Se construye la tabla.
                HTMLPage += HTML_TABLE_TOP;
                
                for (Palabra fallo : partida.getFallos()) {
                    tmp = "<tr><td>" + fallo.getNombre() + "</td>";
                    tmp += "<td>\"" + partida.getRespuestaAlFallo(fallo) + "\"</td>";
                    
                    for (Palabra traduccion : fallo.getTraducciones())
                        
                        if (traduccion.getIdioma().equals(partida.getIdiomaObjectivo()))
                            tmp += traduccion.getNombre() + "<br />";
                    
                    
                    tmp += "</td></tr>";
                    HTMLPage += tmp;
                }
                
                HTMLPage += "</table>";
            }
            
            // Cierro el documento
            HTMLPage +="</body></html>";
            
            return HTMLPage;
        }
    }
}
