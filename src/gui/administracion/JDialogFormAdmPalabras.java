/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.administracion;

import gui.componentes.JComboBoxIdiomas;
import gui.componentes.JListGrupos;
import gui.componentes.JListPalabras;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import lanword.controladores.administracion.GruposCtrl;
import lanword.controladores.administracion.PalabrasCtrl;
import lanword.interfaces.bd.BDManagment;
import lanword.interfaces.bd.BDResolver;
import lanword.modelo.Grupo;
import lanword.modelo.Idioma;
import lanword.modelo.Palabra;

/**
 *
 * @author vikour
 */
public class JDialogFormAdmPalabras extends javax.swing.JDialog {
    private BDManagment bd;
    private Idioma idiomaTodos;

    public JDialogFormAdmPalabras(java.awt.Frame parent, boolean modal) throws Exception {
        super(parent, modal);
        
        try {
            bd = BDResolver.getInstance();
            setUndecorated(true);
            initComponents();
            idiomaTodos = ((JComboBoxIdiomas) jComboBoxIdiomas).getValueNullIdioma();
            jComboBoxIdiomas.setSelectedItem(idiomaTodos);
            jListPosiblesTraducciones.updateUI();
            jListTraducciones.updateUI();
            setLocationByPlatform(true);
            setLocationRelativeTo(parent);
            
            jComboBoxIdiomas.addActionListener(new OnChangeLanguage());
            
            if (bd.idiomas.buscar().size() < 2)
                throw new Exception("Debe de haber al menos 2 idiomas.");

        } catch (SQLException ex) {
            Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBoxIdiomas = new gui.componentes.JComboBoxIdiomas(true, null, new Idioma("Todos"));
        jScrollPane1 = new javax.swing.JScrollPane();
        jListTraducciones = new JListPalabrasAgrupadas();
        jButtonAnyadirPosTraduccion = new javax.swing.JButton();
        jButtonQuitarTraduccion = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListPosiblesTraducciones = new JListPosiblesTraducciones();
        jButtonTerminar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Selecciona el idioma de las palabras : ");

        jScrollPane1.setViewportView(jListTraducciones);

        jButtonAnyadirPosTraduccion.setText("<");
        jButtonAnyadirPosTraduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnyadirPosTraduccionActionPerformed(evt);
            }
        });

        jButtonQuitarTraduccion.setText(">");
        jButtonQuitarTraduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarTraduccionActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jListPosiblesTraducciones);

        jButtonTerminar.setText("Terminar");
        jButtonTerminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTerminarActionPerformed(evt);
            }
        });

        jLabel2.setText("Palabras en el grupo:");

        jLabel3.setText("Posibles palabras : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButtonQuitarTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAnyadirPosTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxIdiomas, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonTerminar, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxIdiomas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAnyadirPosTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonQuitarTraduccion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTerminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTerminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTerminarActionPerformed
        dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_jButtonTerminarActionPerformed

    private void jButtonAnyadirPosTraduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnyadirPosTraduccionActionPerformed
        Palabra palabra;
        Grupo grupo = GruposCtrl.getInstance().getSeleccionado();
        
        if (!jListPosiblesTraducciones.isSelectionEmpty()) {
            
            for (Object o : jListPosiblesTraducciones.getSelectedValuesList()) 
                
                try {
                    palabra = (Palabra) o;
                    grupo.agrupar(palabra);
                    bd.grupos.actualizarAgruparPalabra(grupo, palabra);
                } catch (SQLException ex) {
                    Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            jListPosiblesTraducciones.updateUI();
            jListTraducciones.updateUI();
        }
                
    }//GEN-LAST:event_jButtonAnyadirPosTraduccionActionPerformed

    private void jButtonQuitarTraduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarTraduccionActionPerformed
        Palabra palabra;
        Grupo grupo = GruposCtrl.getInstance().getSeleccionado();
        
        if (!jListTraducciones.isSelectionEmpty()) {
            
            for (Object o : jListTraducciones.getSelectedValuesList()) 
                
                try {
                    palabra = (Palabra) o;
                    grupo.desagrupar(palabra);
                    bd.grupos.actualizarDesagruparPalabra(grupo, palabra);
                    jListTraducciones.updateUI();
                    jListPosiblesTraducciones.updateUI();
                } catch (SQLException ex) {
                    Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
                }
            
        }

    }//GEN-LAST:event_jButtonQuitarTraduccionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    try {
                        /**
                         * DEBUG!!
                         */
                        GruposCtrl.getInstance().setSeleccionado(
                                BDResolver.getInstance().grupos.buscar("Informática")
                        );

                        /**
                         * FIN DEBUG
                         */
                    } catch (SQLException ex) {
                        Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    
                    JDialogFormAdmPalabras dialog = new JDialogFormAdmPalabras(new javax.swing.JFrame(), true);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnyadirPosTraduccion;
    private javax.swing.JButton jButtonQuitarTraduccion;
    private javax.swing.JButton jButtonTerminar;
    private javax.swing.JComboBox jComboBoxIdiomas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jListPosiblesTraducciones;
    private javax.swing.JList jListTraducciones;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    
    /**
     * Implementa ActionListener y sirve para filtrar las listas cuando un nuevo idioma es 
     * seleccionado.
     */
    
    private class OnChangeLanguage implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Idioma selected = (Idioma) jComboBoxIdiomas.getSelectedItem();
            
            jListPosiblesTraducciones.updateUI();
            jListTraducciones.updateUI();
        }
        
    }
    
    private class JListPalabrasAgrupadas extends JListPalabras {

        @Override
        public ArrayList<Palabra> getsPalabras() {
            Grupo grupo = GruposCtrl.getInstance().getSeleccionado();
            ArrayList<Palabra> palabras = new ArrayList<>();
            Idioma idioma = (Idioma) jComboBoxIdiomas.getSelectedItem();
            
            try {
                
                if (idioma.equals(idiomaTodos))
                    palabras = bd.palabras.buscar(null, grupo, null);
                else
                    palabras = bd.palabras.buscar(null, grupo, idioma);
                
            } catch (SQLException ex) {
                Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            return palabras;
        }

        
    }
    
    private class JListPosiblesTraducciones extends JListPalabras {

        @Override
        public ArrayList<Palabra> getsPalabras() {
            ArrayList<Palabra> palabras;
            ArrayList<Palabra> out = new ArrayList<>();
            Idioma seleccionado = (Idioma) jComboBoxIdiomas.getSelectedItem();
            try {
                palabras = bd.palabras.buscarSinGrupo(
                        GruposCtrl.getInstance().getSeleccionado()
                );
                
                if (!seleccionado.equals(idiomaTodos)) {

                    for (Palabra p : palabras) {
                    
                        if ( p.getIdioma().equals(seleccionado) )
                            out.add(p);
                    
                    }
                
                    return out;
                }
                else
                    return palabras;
                
            } catch (SQLException ex) {
                Logger.getLogger(JDialogFormAdmPalabras.class.getName()).log(Level.SEVERE, null, ex);
                return null;
            }
        }
        
    }
}
